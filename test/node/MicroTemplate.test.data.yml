- name: Render Value
  data:
    name: test
  tmpl: |
    <%= data.name %>
  expect: |
    test

- name: Render letter in the middle of word
  data:
    interface: cli
  tmpl: |
    a<%= data.interface %>i
  expect: |
    aclii

- name: Render word in the middle of sentence
  data:
    emotion: love
  tmpl: |
    I <%= data.emotion %> tests
  expect: |
    I love tests

- name: Render Loop
  data:
    nums: [ 1, 2, 3 ]
  tmpl: |
    <% data.nums.forEach( n => { %>
      <%= n %>
    <% }) %>
  expect: |
    1
    2
    3

- name: Render loop in oneline
  data:
    nums: [ 1, 2, 3 ]
  tmpl: <% data.nums.forEach( n => { %><%= n %><% }) %>
  expect: "123"

- name: Loop using Line based templating
  data:
    letters:
      - b
      - c
      - d
  tmpl: |
    a
    ##// // hoge
    ##//data.letters.forEach( l => {
      :<%= l %>
    ##//})
    e
  expect: |
    a
    :b
    :c
    :d
    e

- name: Throw rendering error, for example member access for undefined
  error: Failed to render template
  data:
    foo: { bar: 42 }
  tmpl: <%= data.foo.bar.fizz.buzz %>

- name: Throw compile error for bad javascript
  error: Failed to compile template
  data:
    nums: [ 1, 2, 3 ]
  tmpl: <% data.nums.forEach( n => { %><%= n %><% ) %>


