#!/bin/bash

<%= "# This is auto generated script by aclii " + aclii.version %>

set -euo pipefail

_aclii_debug () {
  if [ -n "${ACLII_DEBUG+HAS_VALUE}" ]; then
    echo "$@" >> /tmp/aclii-debug.log
  fi
}

_aclii_exec () {
  binname=$(dirname $0)/$(basename $0)"-main"
  exec "$binname" $(echo "$1" | base64)
}


_aclii_debug "Launch aclii..."
_aclii_debug "ARGV $@"
_aclii_debug "$ 0 $0"

##// aclii.allCommands.forEach( c => {
_help_<%= c.hashedPath %> () {
  cat << 'EOH'
##// setIndent(2)
Name: <%= c.path  %>
  <%= c.description %>
<%= aclii.manualForCommand(c.path) %>
Commands:
##//  c.commands.forEach( sc => {
  <%= sc.name %><% if (sc.argv ) { %> <<%= sc.argv %>>...<% } %>
    | <%= sc.description %>
##//  })

Options:
##//  c.options.forEach( o => {
  --<%= o.name %> | <%= o.description %>
##//  })
##// setIndent(0)
EOH
}
##//})

_help () {
  local page
  if [ -n "${1+HAS_VALUE}" ]; then
    page="$1"
  else
    page="<%= aclii.commandName %>"
  fi
  case "$page" in
##// aclii.allCommands.forEach( c => {
    "<%= c.path %>") _help_<%= c.hashedPath %> ;;
##// })
  esac
  exit 0
}

# Flag to enable immediate help / validate error
ACLII_EXEC=1

# parser needs @argv
argv=("$@")

__parse_args () {


##//INCLUDE parser.tmpl

  #local want=""
  #local wanting=""
  #local args
  #local argvMode
  #local cmd="<%= aclii.commandName %>"

  _aclii_debug  "got cmd: $cmd"
  _aclii_debug  "    values: ${#values[@]} items ${values[@]}"
  _aclii_debug  "    trails: ${#trailingArgs[@]} items ${trailingArgs[@]}"
  # Now we got the command which to be executed.
  # Handle it as it wants
  local json='{"command":"'"$cmd"'","args":[],"options":{}}'
  local trail
  for trail in "${trailingArgs[@]:1}" # skip dummy element
  do
    json=$(echo $json | jq '.args+=["'"$trail"'"]')
  done
  case "$cmd" in
##// aclii.allCommands.forEach( c => {
    "<%= c.path %>" )
##//   if (c.helpstop) {
      _help "$cmd"
##//   } else {
# Build Args
##// c.options.forEach( o => {
##//   if ( o.required ) {
      if [ -z ${values[<%= o.id %>]+HASVALUE} ]; then
        echo 'Option "<%= o.name %>" is required'
        exit 1
      fi
##//   }
      json=$(echo $json | jq '.options["<%= o.name %>"] = "'"${values[<%= o.id %>]}"'"')
##// })
      _aclii_debug "got json $json"
      _aclii_exec "$json"
##//   }
      ;;
##// })
    * )
      echo "Unknown command";
      _help;
  esac
}

__parse_args


