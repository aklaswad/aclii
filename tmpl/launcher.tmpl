#!/bin/bash
set -euo pipefail

_aclii_debug () {
  if [ -n "${ACLII_DEBUG+HAS_VALUE}" ]; then
    echo "$@" >> /tmp/aclii-debug.log
  fi
}

_aclii_exec () {
  binname=$(dirname $0)/$(basename $0)"-main"
  exec "$binname" $(echo "$1" | base64)
}

args='{"options":{}}'

_aclii_debug "Launch aclii..."
_aclii_debug "ARGV $@"
_aclii_debug "$ 0 $0"

_help () {
  local page
  if [ -n "${1+HAS_VALUE}" ]; then
    page="$1"
  else
    page="<%= aclii.commandName %>"
  fi
  case "$page" in
  <% aclii.allCommands.forEach( c => { %>
    "<%= c.path %>") cat << EOS
Name: <%= c.path  %>
  <%= c.description %>

Commands:
<% c.commands.forEach( sc => { %>
  <%= sc.name %> | <%= sc.description %>
<% }) %>

Options:
<% c.options.forEach( o => { %>
  --<%= o.name %> | <%= o.description %>
<% }) %>
EOS
    ;;
  <% }) %>
  esac
  exit 0
}

__parse_args () {
  processed=0
  _aclii_debug "enter parse_args |$@|"
  local want
  local wanting
  local cmd="<%= aclii.commandName %>"
  for word in "$@"
  do
    : $((processed++))
    _aclii_debug "Processing $processed th arg |$word|"
    _aclii_debug "   cmd: $cmd  want |$want|"

    # Run the path to know where I am
    if [ -n "$want" ]; then
      #TODO: Do we need to varidate here?

      args=$(echo $args | jq '.options["'"$wanting"'"] = "'"$word"'"')
      wanting=""
      want=""
    elif [ "${word:0:1}" == '-' ]; then
      # It starts with dash.

      # This launcher will handle help command
      if [ `echo "$word" | grep "-help$"` ]; then
        _help $cmd
      fi
      # Check option that if
      # next arg is option valu or not

      comopt="$cmd$word"
      _aclii_debug "adding flag |$comopt|"
      _aclii_debug "Checking option $word : comopt $comopt"
      case "$comopt" in
      <% aclii.root.subCommands.forEach( c => {
        c.options.forEach( o => { %>
        "<%= c.path %>--<%= o.name %>" )
          args=$(echo $args | jq '.options["<%= o.name %>"] = true')
          want="<%= o.want %>"
          wanting="<%= o.name %>"
          ;;
      <% })}) %>
        * ) echo "Unknown Option $word"
          exit
          ;;
      esac
    else
      case "$cmd.$word" in
      <% aclii.root.subCommands.forEach( c => { %>
        "<%= c.path %>" )
          cmd="<%= c.path %>"
          ;;
      <% }) %>
        * ) echo "Unknown Command: $word"
            echo
            _help $cmd
      esac
    fi

  done

  args=$(echo "$args" | jq --arg com "$cmd" '.command = $com')
  _aclii_debug "Parse done---------"

  # Now we got the command which to be executed.
  # Handle it as it wants
  case "$cmd" in
  <% aclii.allCommands.forEach( c => { %>
    "<%= c.path %>" )
    <% if (c.helpstop) { %>
      _help "$cmd"
    <% } else { %>
      _aclii_exec "$args"
    <% } %>
      ;;
  <% }) %>
    * )
      echo "Unknown command";
      _help;
  esac
}

__parse_args "$@"


