<%= "# This is auto generated script by aclii " + aclii.version %>

_aclii_debug () {
  if [ -n "$ACLII_DEBUG" ]; then
    echo "$@" >> /tmp/aclii-debug.log
  fi
}

_<%= aclii.commandName %> () {

  # parser needs @argv
  argv=(${COMP_WORDS[@]:0:$((${#COMP_WORDS[@]}-1))})

##//INCLUDE parser.tmpl

  local oldifs="$IFS"
  cur="${COMP_WORDS[COMP_CWORD]}"
  _aclii_debug "enter compwords |${COMP_WORDS[@]}| cur |$cur|"

  COMPREPLY=()


  if [ -n "$wantType" ]; then
      # OK, we already know what we want;
      _aclii_debug "want $want |"
    case "$wantType" in
      "file" ) _filedir ;;
      "dir" ) _filedir -d ;;
      * ) COMPREPLY=() ;;
    esac
  elif [ "${cur:0:1}" == '-' ]; then
    # It starts with dash. Maybe we should show option list
    case "$cmd" in
##//  aclii.allCommands.forEach( c => {
      "<%= c.path %>" )
        _aclii_debug "path: <%= c.path %> cur: $cur |"
        COMPREPLY=( $(compgen -W "<%= c.options.map( o => '--' + o.name ).join(" ") %>" -- "${cur}" )) ;;
##//  })
    esac
  else
    # Or, searching next command
    case "$cmd" in
##//  aclii.allCommands.forEach( c => {
      "<%= c.path %>" )
      COMPREPLY=( $(compgen -W "<%= c.commands.map( c => c.name ).join(" ") %>" -- "${cur}" )) ;;
##//  })
    esac
  fi
  _aclii_debug "---------"

  IFS="$oldifs"
}
complete -o default -F _<%= aclii.commandName %> <%= aclii.commandName %>
