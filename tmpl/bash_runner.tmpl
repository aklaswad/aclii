#!/bin/bash



_q () {

  # retval:
  # 0: Success
  # 1: given query is invalid
  # 2: queried input was not found in user input
  # 3: Too many inputs are found for non-multiple input

  local query="$1"
  local noDefault="$2"
  local inputId="-1"
  local idx=0
  local inputKey
  for inputKey in "${__aclii_inputkeys[@]}"
  do
    if [ ${query} = ${inputKey} ]; then
      inputId=$idx
      break
    fi
    : $((idx++))
  done

  if [ "$inputId" = "-1" ]; then
    return 1
  fi

  idx=0
  local valueFor
  local found=0
  for valueFor in "${__aclii_foundValuesFor[@]}"
  do
    if [ "$valueFor" = "$inputId" ]; then
      echo "${__aclii_foundValues[$idx]}"
      : $((found++))
    fi
    : $((idx++))
  done
  if [ "0" == "$found" ]
      return 2
  fi
  if [ -z "${__aclii_inputIsMany[inputId]}" ] && [ -z "${__aclii_inputIsMulti[inputId]}" ]; then
    if [ "1" != "$found" ]; then
      return 3
    fi
  fi
  return 0
}

__arg_parse () {
  local argv=("$@")

  unset __aclii_inputChain
  unset __aclii_inputTypes
  unset __aclii_inputKeys
  unset __aclii_inputDefaults
  unset __aclii_inputIsMany
  unset __aclii_inputIsMulti

  unset __aclii_foundValues
  unset __aclii_foundValuesFor
  unset __aclii_error
  unset __aclii_cmd
  unset __aclii_help

  unset __aclii_binPath
  unset __aclii_isHelpStop

##// INCLUDE parser.tmpl

  # Export definition in parser out to global
  declare -a __aclii_inputChain=("${inputChain[@]}")
  declare -a __aclii_inputTypes=("${inputTypes[@]}")
  declare -a __aclii_inputKeys=("${inputKeys[@]}")
  declare -a __aclii_inputDefaults=("${inputDefaults[@]}")
  declare -a __aclii_inputIsMany=("${inputIsMany[@]}")
  declare -a __aclii_inputIsMulti=("${inputIsMulti[@]}")

  declare -a __aclii_foundValues=("${foundValues[@]}")
  declare -a __aclii_foundValuesFor=("${foundValuesFor[@]}")
  declare __aclii_error="$error"
  declare __aclii_cmd="$cmd"
  declare __aclii_help="$help"

  declare __aclii_binPath=""
  declare __aclii_isHelpStop=""

  case "$cmd" in
##// aclii.allCommands.forEach( c => {
    "<%= c.path %>" )
##//   if (c.helpstop) {
      __aclii_isHelpStop="$cmd"
##//   }
      __aclii_binPath="<%= c.binPath %>"
      ;;
##// })
  esac
}

#__arg_parser ("$@")
